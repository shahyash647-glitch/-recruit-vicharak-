// ==========================
// ALU
// ==========================
module ALU (
    input [15:0] a, b,
    input [3:0] alu_control,
    output reg [15:0] result
);
    always @(*) begin
        case (alu_control)
            4'b0000: result = a + b;       // ADD
            4'b0001: result = a - b;       // SUB
            4'b0010: result = a * b;       // MUL
            4'b0011: result = (b!=0)? a/b:16'b0; // DIV
            4'b0100: result = a + 1;       // INC
            4'b0101: result = a - 1;       // DEC
            4'b0110: result = a & b;       // AND
            4'b0111: result = a | b;       // OR
            4'b1000: result = a ^ b;       // XOR
            4'b1001: result = ~a;          // NOT
            default: result = 16'b0;
        endcase
    end
endmodule
